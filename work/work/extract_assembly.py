import re

asm = """
toto.o:     format de fichier elf64-x86-64


Déassemblage de la section .text :

0000000000000000 <f__(eve::sse_abi_v0::wide<signed char, eve::fixed<16l> >, eve::sse_abi_v0::wide<signed char, eve::fixed<16l> >)>:
   0:	f3 0f 1e fa          	endbr64
   4:	66 0f 6f c8          	movdqa %xmm0,%xmm1
   8:	66 0f ef c0          	pxor   %xmm0,%xmm0
   c:	66 0f f8 c1          	psubb  %xmm1,%xmm0
  10:	66 0f da c1          	pminub %xmm1,%xmm0
  14:	c3                   	ret
"""




"""
Function to extract assembly instructions from string.
Input string must be generated by objdump.

@param asm: objdump desassemble output file
@return: instructions list
"""
def extract_instructions(asm:str):
    # extracts each instruction line (full line)
    x = re.findall("[0-9a-f]+:\t[^\n\t]+\t[^\n]+", asm)

    # instructions list
    instr = []

    for i in x:
        # extracts only the instruction name (without parameters)
        s = str.split(i, '\t')
        instr.append(str.split(s[2], ' ')[0])
    
    return instr


print(extract_instructions(asm))