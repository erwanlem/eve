{
    "function": "average",
    "asm": [
        {
            "type": [
                "float",
                "float"
            ],
            "instr": [
                "movaps 0x0(%rip),%xmm2",
                "mulps %xmm2,%xmm1",
                "mulps %xmm2,%xmm0",
                "addps %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "signed char",
                "signed char"
            ],
            "instr": [
                "movdqa %xmm1,%xmm2",
                "pand %xmm0,%xmm2",
                "pxor %xmm0,%xmm1",
                "pshufd $0xee,%xmm1,%xmm0",
                "movq %xmm0,%rdi",
                "movq %xmm1,%rax",
                "mov %rax,%rsi",
                "shr $0x8,%rsi",
                "mov %rax,%r9",
                "shr $0x10,%r9",
                "mov %rdi,%r8",
                "shr $0x18,%r8",
                "mov %rax,%r10",
                "shr $0x18,%r10",
                "mov %eax,%ecx",
                "movdqa %xmm1,%xmm0",
                "pshufb 0x0(%rip),%xmm0",
                "mov %rdi,%rdx",
                "shld $0x18,%rax,%rdx",
                "shrd $0x30,%rdi,%rax",
                "shl $0x18,%ecx",
                "movq %rax,%xmm4",
                "movq %rdx,%xmm3",
                "punpckldq %xmm4,%xmm3",
                "mov %edi,%eax",
                "shl $0x8,%eax",
                "mov %rdi,%rdx",
                "shr $0x8,%rdx",
                "shr $0x10,%rdi",
                "movq %rdi,%xmm5",
                "movq %rdx,%xmm4",
                "punpckldq %xmm5,%xmm4",
                "movd %ecx,%xmm6",
                "movd %esi,%xmm7",
                "movdqa %xmm1,%xmm5",
                "punpckldq %xmm7,%xmm5",
                "movdqa %xmm5,%xmm7",
                "shufps $0xd4,%xmm0,%xmm7",
                "punpckldq %xmm6,%xmm0",
                "shufps $0x21,%xmm7,%xmm0",
                "movd %r10d,%xmm6",
                "movd %r9d,%xmm7",
                "punpckldq %xmm6,%xmm7",
                "punpcklqdq %xmm7,%xmm5",
                "movdqa %xmm1,%xmm7",
                "shufps $0xc5,%xmm6,%xmm7",
                "shufps $0x29,%xmm7,%xmm5",
                "movd %eax,%xmm6",
                "palignr $0x8,%xmm1,%xmm6",
                "shufps $0x24,%xmm6,%xmm3",
                "movd %r8d,%xmm6",
                "shufps $0xc7,%xmm6,%xmm1",
                "shufps $0x24,%xmm1,%xmm4",
                "psrad $0x19,%xmm5",
                "psrad $0x19,%xmm0",
                "packssdw %xmm5,%xmm0",
                "psrad $0x19,%xmm4",
                "psrad $0x19,%xmm3",
                "packssdw %xmm4,%xmm3",
                "packsswb %xmm3,%xmm0",
                "paddb %xmm2,%xmm0"
            ]
        },
        {
            "type": [
                "char",
                "char"
            ],
            "instr": [
                "movdqa %xmm1,%xmm2",
                "pand %xmm0,%xmm2",
                "pxor %xmm0,%xmm1",
                "pshufd $0xee,%xmm1,%xmm0",
                "movq %xmm0,%rdi",
                "movq %xmm1,%rax",
                "mov %rax,%rsi",
                "shr $0x8,%rsi",
                "mov %rax,%r9",
                "shr $0x10,%r9",
                "mov %rdi,%r8",
                "shr $0x18,%r8",
                "mov %rax,%r10",
                "shr $0x18,%r10",
                "mov %eax,%ecx",
                "movdqa %xmm1,%xmm0",
                "pshufb 0x0(%rip),%xmm0",
                "mov %rdi,%rdx",
                "shld $0x18,%rax,%rdx",
                "shrd $0x30,%rdi,%rax",
                "shl $0x18,%ecx",
                "movq %rax,%xmm4",
                "movq %rdx,%xmm3",
                "punpckldq %xmm4,%xmm3",
                "mov %edi,%eax",
                "shl $0x8,%eax",
                "mov %rdi,%rdx",
                "shr $0x8,%rdx",
                "shr $0x10,%rdi",
                "movq %rdi,%xmm5",
                "movq %rdx,%xmm4",
                "punpckldq %xmm5,%xmm4",
                "movd %ecx,%xmm6",
                "movd %esi,%xmm7",
                "movdqa %xmm1,%xmm5",
                "punpckldq %xmm7,%xmm5",
                "movdqa %xmm5,%xmm7",
                "shufps $0xd4,%xmm0,%xmm7",
                "punpckldq %xmm6,%xmm0",
                "shufps $0x21,%xmm7,%xmm0",
                "movd %r10d,%xmm6",
                "movd %r9d,%xmm7",
                "punpckldq %xmm6,%xmm7",
                "punpcklqdq %xmm7,%xmm5",
                "movdqa %xmm1,%xmm7",
                "shufps $0xc5,%xmm6,%xmm7",
                "shufps $0x29,%xmm7,%xmm5",
                "movd %eax,%xmm6",
                "palignr $0x8,%xmm1,%xmm6",
                "shufps $0x24,%xmm6,%xmm3",
                "movd %r8d,%xmm6",
                "shufps $0xc7,%xmm6,%xmm1",
                "shufps $0x24,%xmm1,%xmm4",
                "psrad $0x19,%xmm5",
                "psrad $0x19,%xmm0",
                "packssdw %xmm5,%xmm0",
                "psrad $0x19,%xmm4",
                "psrad $0x19,%xmm3",
                "packssdw %xmm4,%xmm3",
                "packsswb %xmm3,%xmm0",
                "paddb %xmm2,%xmm0"
            ]
        },
        {
            "type": [
                "double",
                "double"
            ],
            "instr": [
                "movapd 0x0(%rip),%xmm2",
                "mulpd %xmm2,%xmm1",
                "mulpd %xmm2,%xmm0",
                "addpd %xmm1,%xmm0"
            ]
        },
        {
            "type": [
                "int",
                "int"
            ],
            "instr": [
                "movdqa %xmm1,%xmm2",
                "pand %xmm0,%xmm2",
                "pxor %xmm1,%xmm0",
                "psrad $0x1,%xmm0",
                "paddd %xmm2,%xmm0"
            ]
        }
    ]
}