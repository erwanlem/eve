{
    "function": "agm",
    "asm": [
        {
            "type": [
                "float",
                "float"
            ],
            "instr": [
                "movaps 0x0(%rip),%xmm5",
                "movaps %xmm1,%xmm6",
                "movaps %xmm0,%xmm3",
                "movaps 0x0(%rip),%xmm4",
                "pxor %xmm7,%xmm7",
                "movaps %xmm3,%xmm11",
                "movaps %xmm1,%xmm13",
                "movdqa 0x0(%rip),%xmm8",
                "mulps %xmm5,%xmm0",
                "cmpeqps %xmm7,%xmm11",
                "movaps %xmm3,%xmm9",
                "movdqa 0x0(%rip),%xmm12",
                "mulps %xmm5,%xmm6",
                "cmpeqps %xmm7,%xmm13",
                "cmpunordps %xmm1,%xmm9",
                "movaps %xmm11,%xmm10",
                "orps %xmm13,%xmm10",
                "andnps 0x0(%rip),%xmm10",
                "addps %xmm0,%xmm6",
                "movaps %xmm6,%xmm2",
                "movaps %xmm6,%xmm0",
                "subps %xmm6,%xmm6",
                "cmpneqps %xmm7,%xmm0",
                "andps %xmm4,%xmm2",
                "psrad $0x17,%xmm2",
                "paddd %xmm2,%xmm8",
                "cmpneqps %xmm6,%xmm6",
                "pblendvb %xmm0,%xmm8,%xmm2",
                "movdqa 0x0(%rip),%xmm0",
                "movdqa %xmm0,%xmm8",
                "pand %xmm1,%xmm0",
                "pandn %xmm2,%xmm6",
                "pand %xmm3,%xmm8",
                "cmpeqps %xmm4,%xmm0",
                "movaps %xmm3,%xmm2",
                "cmpeqps %xmm4,%xmm8",
                "addps %xmm1,%xmm2",
                "movdqa 0x0(%rip),%xmm4",
                "orps %xmm0,%xmm8",
                "movaps %xmm8,%xmm0",
                "blendvps %xmm0,%xmm2,%xmm10",
                "movdqa %xmm4,%xmm2",
                "movaps %xmm13,%xmm0",
                "pand %xmm1,%xmm2",
                "pand %xmm3,%xmm4",
                "por %xmm12,%xmm2",
                "por %xmm12,%xmm4",
                "blendvps %xmm0,%xmm1,%xmm2",
                "movaps %xmm11,%xmm0",
                "movdqa 0x0(%rip),%xmm11",
                "blendvps %xmm0,%xmm3,%xmm4",
                "movaps %xmm2,%xmm0",
                "mulps %xmm4,%xmm0",
                "cmpleps %xmm7,%xmm0",
                "movaps 0x0(%rip),%xmm7",
                "orps %xmm9,%xmm0",
                "movaps 0x0(%rip),%xmm9",
                "por %xmm8,%xmm0",
                "movaps 0x0(%rip),%xmm8",
                "movaps %xmm0,%xmm2",
                "andnps %xmm3,%xmm2",
                "movaps %xmm0,%xmm3",
                "andnps %xmm1,%xmm3",
                "movdqa %xmm11,%xmm1",
                "psubd %xmm6,%xmm1",
                "pslld $0x17,%xmm1",
                "mulps %xmm1,%xmm3",
                "mulps %xmm1,%xmm2",
                "movaps %xmm3,%xmm1",
                "xorps %xmm9,%xmm1",
                "movaps %xmm2,%xmm4",
                "mulps %xmm5,%xmm1",
                "mulps %xmm5,%xmm4",
                "addps %xmm4,%xmm1",
                "andps %xmm8,%xmm1",
                "jmp 33d",
                "nopl 0x0(%rax)",
                "movaps %xmm3,%xmm1",
                "movaps %xmm2,%xmm12",
                "movaps %xmm2,%xmm4",
                "mulps %xmm5,%xmm12",
                "xorps %xmm9,%xmm1",
                "movaps %xmm3,%xmm2",
                "mulps %xmm3,%xmm4",
                "mulps %xmm5,%xmm1",
                "mulps %xmm5,%xmm2",
                "sqrtps %xmm4,%xmm3",
                "addps %xmm12,%xmm1",
                "addps %xmm12,%xmm2",
                "andps %xmm8,%xmm1",
                "movaps %xmm7,%xmm4",
                "cmpltps %xmm1,%xmm4",
                "movmskps %xmm4,%eax",
                "test $0xf,%al",
                "jne 310",
                "paddd %xmm6,%xmm11",
                "pslld $0x17,%xmm11",
                "mulps %xmm11,%xmm3",
                "blendvps %xmm0,%xmm10,%xmm3",
                "movaps %xmm3,%xmm0"
            ]
        }
    ]
}