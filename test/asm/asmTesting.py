import sys
import generation
import validation

"""
        Assembly Testing Program

This is the main file of the ATP.
ATP is a tool made for validating EVE assembly code output.

Until now, this tool can:
    - Read functions from config files and generate corresponding assembly program.
        - Config files are organized as described below:
            The directory `config` contains a file for each function.
            Each file contains the name of the function and the parameters it takes.

    - Validate instructions generated by the current version of EVE by comparing 
    them with instructions previously saved in functions.json

Calling asmTesting without any option starts the validation process.
Options are:
    - `-g` : Generate functions assembly. Functions that are not stored in functions.json are append.
    - `-d` : Deep update -- Functions are replaced in functions.json even though they were already in.
    - `-t` : Keep temporary files after processing
    - `-l` : Validation log file
    - `-s` : Select validation target. By default all functions are validated

    New options
    - `-m archName`
    - `-l` log file
    - `-input file` select file
    - `-d` deep
    - `-t` keep temporary files
    - `-g` generate assembly
    - `-c compiler` clang/g++ 
"""


def custom_selection():
    """Handle -s parameter.

    Returns:
        list: List of entry with -s or if -s isn't used returns 'all'
    """
    argv = sys.argv

    if '-s' in argv:
        l = []
        b = argv.index('-s')
        b+=1
        while b < len(argv) and argv[b][0] != '-':
            l.append(argv[b])
            b+=1
        return l
    else:
        return 'all'


if __name__ == '__main__':
    argv = sys.argv
    if '-g' in argv:
        deep = '-d' in argv
        tmp = '-t' in argv
        generation.update(deep=deep, keep_tmp=tmp)
    else:
        log = '-l' in argv
        validation.validate(log_file=log, select=custom_selection())
